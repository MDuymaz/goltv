name: Run proxylive.py script

on:
  workflow_run:
    workflows: ["Run m3u-link.py script"]
    types:
      - completed
  workflow_dispatch:  # Manuel olarak çalıştırılabilir 

jobs:
  run-proxylive-script:
    runs-on: ubuntu-latest  # GitHub Actions'ı çalıştıracak ortam

    steps:
      # Python ortamını kuruyoruz
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Python 3.9 sürümünü kullanıyoruz

      # Selenium ve diğer gerekli bağımlılıkları yüklüyoruz
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager

      # Reponun içeriğini çekiyoruz
      - name: Checkout repository
        uses: actions/checkout@v2

      # Chrome ve ChromeDriver'ı yüklüyoruz
      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt --fix-broken install

      # proxylive.py scriptini çalıştırıyoruz
      - name: Run proxylive.py script
        run: |
          python proxylive.py

      # proxylive.py scriptinin çıktısını kontrol ediyoruz
      - name: Check if son_m3u_link_tamam.txt is updated
        id: check_update
        run: |
          echo "Checking if son_m3u_link_tamam.txt was updated:"
          cat son_m3u_link_tamam.txt  # Dosyanın içeriğini kontrol ediyoruz
          
          # Dosya güncellenmemişse hata veriyoruz
          OLD_CONTENT=$(cat son_m3u_link_tamam.txt)
          NEW_CONTENT=$(python proxylive.py)  # Yeni içerik için scripti çalıştırıyoruz
          
          if [ "$OLD_CONTENT" == "$NEW_CONTENT" ]; then
            echo "No updates needed."  # İçerik değişmemişse mesaj yazdırıyoruz
            echo "no_update=true" >> $GITHUB_ENV  # İçerik değişmemişse bir environment variable set ediyoruz
          else
            echo "son_m3u_link_tamam.txt file successfully updated"
            echo "no_update=false" >> $GITHUB_ENV  # İçerik güncellenmişse farklı bir variable set ediyoruz
          fi

      # GitHub Actions'a yapılan değişiklikleri commit ediyoruz
      - name: Commit updated son_m3u_link_tamam.txt
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Değişiklik olup olmadığını kontrol et
          if git diff --quiet; then
            echo "No changes detected. Skipping commit."
          else
            git add son_m3u_link_tamam.txt
            if [ "${{ env.no_update }}" == "true" ]; then
              git commit -m "No update needed for M3U link."  # İçerik değişmemişse özel mesaj
            else
              git commit -m "M3U links updated."  # İçerik güncellenmişse normal mesaj
            fi
            git push
          fi

      # encode.yml workflow'unu tetiklemek
      - name: Trigger encode.yml workflow
        if: success()  # Bu adımdan önce başarılı olursa tetiklenir
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "main"}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/encode.yml/dispatches
